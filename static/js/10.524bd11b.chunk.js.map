{"version":3,"sources":["Actions/orders.js","Pages/AdminOrders.module.css","Pages/AdminOrders.js"],"names":["getAllOrdersForAdmin","admin","dispatch","a","type","axios","method","url","headers","token","email","res","status","orders","data","request","error","sendOrderToServer","orderInfo","response","products","getIndividualOrder","orderId","userInfo","JSON","parse","localStorage","getItem","userId","id","order","getOrdersForUser","user","closeModal","module","exports","AdminOrders","componentDidMount","props","getOrders","getDevisedStateFromProps","newProps","console","log","this","map","className","styles","adminorderdetails","orderdetails","_id","dateOfOrder","split","icon","faCheck","Component","mapDispatchToProps","connect","state"],"mappings":"sUAEaA,EAAuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrC,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLD,EAAS,CAAEE,KAAM,eADZ,kBAGaC,IAAM,CACpBC,OAAQ,MACRC,IAAI,sEAEJC,QAAS,CACPC,MAAOR,EAAMQ,MACbC,MAAOT,EAAMS,SATd,OAYgB,OATfC,EAHD,QAYKC,QACNV,EAAS,CAAEE,KAAM,gCAAiCS,OAAQF,EAAIG,OAb7D,gDAgBC,KAAIC,SAAkC,IAAvB,KAAIA,QAAQH,QAC7BV,EAAS,CACPE,KAAM,aACNY,MAAO,oCAnBR,yDAAP,uDA2BWC,EAAoB,SAACC,GAChC,8CAAO,WAAOhB,GAAP,eAAAC,EAAA,6DACLD,EAAS,CAAEE,KAAM,eADZ,kBAGkBC,IAAM,CACzBC,OAAQ,OACRC,IAAI,mEACJO,KAAM,CACJI,aAEFV,QAAS,CACPC,MAAOS,EAAUT,SAVlB,OAaqB,OAVpBU,EAHD,QAaUP,QACXV,EAAS,CAAEE,KAAM,gBAAiBgB,SAAUD,EAASL,OAdpD,gDAiBC,KAAIC,SAAkC,IAAvB,KAAIA,QAAQH,QAC7BV,EAAS,CACPE,KAAM,aACNY,MAAO,oCApBR,yDAAP,uDA4BWK,EAAqB,SAACC,GACjC,8CAAO,WAAOpB,GAAP,iBAAAC,EAAA,6DACDoB,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aAC/CzB,EAAS,CAAEE,KAAM,eAFZ,kBAIkBC,IAAM,CACzBC,OAAQ,MACRC,IAAI,gEAAD,OAAkEe,GAErEd,QAAS,CACPC,MAAOc,EAASd,MAChBmB,OAAQL,EAASM,MAVlB,OAaqB,OATpBV,EAJD,QAaUP,QACXV,EAAS,CAAEE,KAAM,0BAA2B0B,MAAOX,EAASL,OAd3D,gDAiBHZ,EAAS,CAAEE,KAAM,aAAcY,MAAO,KAAIG,SAASL,OAjBhD,yDAAP,uDAsBWiB,EAAmB,SAAC,GAAqB,IAAnBtB,EAAkB,EAAlBA,MAAOuB,EAAW,EAAXA,KACxC,8CAAO,WAAO9B,GAAP,eAAAC,EAAA,6DACLD,EAAS,CAAEE,KAAM,eADZ,kBAGkBC,IAAM,CACzBC,OAAQ,MACRC,IAAI,0DAAD,OAA4DyB,GAC/DxB,QAAS,CACPC,MAAOA,KAPR,OAUqB,OAPpBU,EAHD,QAUUP,QACXV,EAAS,CAAEE,KAAM,sBAAuBS,OAAQM,EAASL,OAXxD,gDAcHZ,EAAS,CAAEE,KAAM,aAAcY,MAAM,EAAD,KAdjC,yDAAP,uDAmBWiB,EAAa,WACxB,MAAO,CAAE7B,KAAM,iB,oBCtGjB8B,EAAOC,QAAU,CAAC,kBAAoB,uCAAuC,aAAe,oC,kMCctFC,E,4MACJC,kBAAoB,WAAO,IAAD,EACD,EAAKC,MAAMN,KAA5BvB,EADkB,EAClBA,MAAOC,EADW,EACXA,MACb,EAAK4B,MAAMC,UAAU,CAAEtC,MAAO,CAAES,QAAOD,Y,EAGzC+B,yBAA2B,SAACC,GAC1B,GAAI,EAAKH,QAAUG,EAAU,CAC3BC,QAAQC,IAAI,WADe,MAEJ,EAAKL,MAAMN,KAA5BvB,EAFqB,EAErBA,MAAOC,EAFc,EAEdA,MACb,EAAK4B,MAAMC,UAAU,CAAEtC,MAAO,CAAES,QAAOD,a,uDAIjC,IACFI,EAAW+B,KAAKN,MAAhBzB,OAEN,OADA6B,QAAQC,IAAI9B,EAAOA,QAEjB,qCACE,iDACCA,EAAOA,OAAOgC,KAAI,SAACf,GAAD,OACjB,qBAAKgB,UAAWC,IAAOC,kBAAvB,SACE,sBAAKF,UAAWC,IAAOE,aAAvB,UACE,wCAAWnB,EAAMoB,OACjB,0CAAapB,EAAMqB,YAAYC,MAAM,KAAK,MAC1C,2CACS,cAAC,IAAD,CAAiBC,KAAMC,wB,GA1BpBC,aA2CbC,EAAqB,SAACtD,GACjC,MAAO,CACLqC,UAAW,SAACzB,GAAD,OAAUZ,EAASF,YAAqBc,OAIxC2C,uBAbS,SAACC,GACvB,MAAO,CACL7C,OAAQ6C,EAAM7C,OACdmB,KAAM0B,EAAM1B,KAAKA,QAUmBwB,EAAzBC,CAA6CrB","file":"static/js/10.524bd11b.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getAllOrdersForAdmin = ({ admin }) => {\n  return async (dispatch) => {\n    dispatch({ type: 'ORDER_SENT' });\n    try {\n      let res = await axios({\n        method: 'get',\n        url: `https://my-ecommerce-site-fitness.herokuapp.com/adminuser/allorders`,\n\n        headers: {\n          token: admin.token,\n          email: admin.email,\n        },\n      });\n      if (res.status === 200) {\n        dispatch({ type: 'ADMIN_ALL_USER_ORDERS_SUCCESS', orders: res.data });\n      }\n    } catch (err) {\n      if (err.request && err.request.status === 0) {\n        dispatch({\n          type: 'ORDER_FAIL',\n          error: 'Network error, please try again',\n        });\n      }\n    }\n    // dispatch({ type: 'ORDER_FAIL', error: err});\n  };\n};\n\nexport const sendOrderToServer = (orderInfo) => {\n  return async (dispatch) => {\n    dispatch({ type: 'ORDER_SENT' });\n    try {\n      let response = await axios({\n        method: 'post',\n        url: `https://my-ecommerce-site-fitness.herokuapp.com/orders/new-order`,\n        data: {\n          orderInfo,\n        },\n        headers: {\n          token: orderInfo.token,\n        },\n      });\n      if (response.status === 201) {\n        dispatch({ type: 'ORDER_SUCCESS', products: response.data });\n      }\n    } catch (err) {\n      if (err.request && err.request.status === 0) {\n        dispatch({\n          type: 'ORDER_FAIL',\n          error: 'Network error, please try again',\n        });\n      }\n    }\n    // dispatch({ type: 'ORDER_FAIL', error: err.response.data });\n  };\n};\n\nexport const getIndividualOrder = (orderId) => {\n  return async (dispatch) => {\n    let userInfo = JSON.parse(localStorage.getItem('userInfo'));\n    dispatch({ type: 'ORDER_SENT' });\n    try {\n      let response = await axios({\n        method: 'get',\n        url: `https://my-ecommerce-site-fitness.herokuapp.com/orders/order/${orderId}`,\n\n        headers: {\n          token: userInfo.token,\n          userId: userInfo.id,\n        },\n      });\n      if (response.status === 200) {\n        dispatch({ type: 'INDIVDUAL_ORDER_SUCCESS', order: response.data });\n      }\n    } catch (err) {\n      dispatch({ type: 'ORDER_FAIL', error: err.response.data });\n    }\n  };\n};\n\nexport const getOrdersForUser = ({ token, user }) => {\n  return async (dispatch) => {\n    dispatch({ type: 'ORDER_SENT' });\n    try {\n      let response = await axios({\n        method: 'get',\n        url: `https://my-ecommerce-site-fitness.herokuapp.com/orders/${user}`,\n        headers: {\n          token: token,\n        },\n      });\n      if (response.status === 200) {\n        dispatch({ type: 'ORDER_LIST_RECEIVED', orders: response.data });\n      }\n    } catch (err) {\n      dispatch({ type: 'ORDER_FAIL', error: err });\n    }\n  };\n};\n\nexport const closeModal = () => {\n  return { type: 'CLOSE_MODAL' };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adminorderdetails\":\"AdminOrders_adminorderdetails__4lAMV\",\"orderdetails\":\"AdminOrders_orderdetails__nGUoY\"};","/* NPM packages */\n\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\n\n/* CSS */\n\nimport styles from './AdminOrders.module.css';\n\n/* action creators */\n\nimport { getAllOrdersForAdmin } from '../Actions/orders.js';\n\nclass AdminOrders extends Component {\n  componentDidMount = () => {\n    let { token, email } = this.props.user;\n    this.props.getOrders({ admin: { email, token } });\n  };\n\n  getDevisedStateFromProps = (newProps) => {\n    if (this.props !== newProps) {\n      console.log('changed');\n      let { token, email } = this.props.user;\n      this.props.getOrders({ admin: { email, token } });\n    }\n  };\n\n  render() {\n    let { orders } = this.props;\n    console.log(orders.orders);\n    return (\n      <>\n        <h2>Customer Orders</h2>\n        {orders.orders.map((order) => (\n          <div className={styles.adminorderdetails}>\n            <div className={styles.orderdetails}>\n              <span>ID: {order._id}</span>\n              <span>Date: {order.dateOfOrder.split(' ')[0]}</span>\n              <span>\n                Paid : <FontAwesomeIcon icon={faCheck} />\n              </span>\n            </div>\n          </div>\n        ))}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.orders,\n    user: state.user.user,\n  };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    getOrders: (data) => dispatch(getAllOrdersForAdmin(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminOrders);\n"],"sourceRoot":""}