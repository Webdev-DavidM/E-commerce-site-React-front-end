{"version":3,"sources":["Pages/AdminEditProduct.module.css","Pages/AdminCreateProduct.js"],"names":["module","exports","AdminCreateProduct","props","handleSubmit","e","setState","errors","preventDefault","createNewProduct","user","formData","FormData","readyToSubmit","state","name","prevState","small","Number","isInteger","parseInt","medium","large","colour","price","imagesArrayForMulter","length","brand","stock","category","description","chosenSubCat","forEach","image","append","admin","email","token","reset","initialState","history","push","closeModal","viewProduct","createdProductId","removeImage","index","imagesToDisplay","imagesToSendToMulter","splice","updateCat","target","value","subCats","Object","keys","categories","allSubCats","cat","subsubcat","console","log","subcategory","updateSubCat","handleChange","files","fileReader","FileReader","onload","concat","result","readAsDataURL","showModal","this","productCreated","options","map","unshift","selected","className","styles","editproductcontainer","productmodal","product","style","textAlign","color","class","productbtn","onClick","continueshoppingbtn","gobackbtn","to","editformcontainer","onSubmit","encType","onChange","type","for","uploadbtn","display","id","accept","multiple","imagecontainer","imagebtn","imagehover","height","width","padding","src","alt","sizecontainer","smallcontainer","sizeinput","dropdown","disabled","submitbtn","error","Component","withRouter","connect","products","productCreatedModal","latestCreatedProductId","dispatch","data","createProduct","closeProductCreatedModal"],"mappings":"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","file":"static/js/13.93e51bb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editproductcontainer\":\"AdminEditProduct_editproductcontainer__-7HGn\",\"viewproductbtn\":\"AdminEditProduct_viewproductbtn__1keID\",\"editproductbtn\":\"AdminEditProduct_editproductbtn__X-IQt\",\"productmodal\":\"AdminEditProduct_productmodal__1_gN0\",\"product\":\"AdminEditProduct_product__1Xq2H\",\"productbtn\":\"AdminEditProduct_productbtn__2owQS\",\"sizeinput\":\"AdminEditProduct_sizeinput__MsJWt\",\"smallcontainer\":\"AdminEditProduct_smallcontainer__2CSn-\",\"sizecontainer\":\"AdminEditProduct_sizecontainer__2oFZw\",\"submitbtn\":\"AdminEditProduct_submitbtn__1qqvg\",\"uploadbtn\":\"AdminEditProduct_uploadbtn__2HCNA\",\"editformcontainer\":\"AdminEditProduct_editformcontainer___iEOK\",\"gobackbtn\":\"AdminEditProduct_gobackbtn__1XhHE\",\"dropdown\":\"AdminEditProduct_dropdown__-Rqya\",\"imagecontainer\":\"AdminEditProduct_imagecontainer__1Zpxi\",\"imagebtn\":\"AdminEditProduct_imagebtn__1uc10\",\"imagehover\":\"AdminEditProduct_imagehover__2766O\",\"error\":\"AdminEditProduct_error__1bF4x\"};","/* NPM packages */\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n/* CSS */\n\nimport styles from './AdminEditProduct.module.css';\n\n/* Action creators */\n\nimport {\n  createProduct,\n  closeProductCreatedModal,\n} from '../Actions/products.js';\n\nclass AdminCreateProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      price: '',\n      imagesToDisplay: [],\n      imagesArrayForMulter: [],\n      brand: '',\n      small: '',\n      medium: '',\n      large: '',\n      category: '',\n      subcategory: [],\n      chosenSubCat: '',\n      description: '',\n      errors: [],\n      colour: '',\n      showModal: false,\n    };\n\n    // Set the default state immediately\n    this.initialState = this.state;\n  }\n\n  handleSubmit = (e) => {\n    this.setState({ errors: [] });\n    e.preventDefault();\n    let { createNewProduct, user } = this.props;\n    const formData = new FormData();\n    this.setState({ errors: [] });\n\n    let readyToSubmit = true;\n\n    if (this.state.name === '') {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for name'],\n      }));\n      readyToSubmit = false;\n    }\n    if (\n      this.state.small === '' ||\n      !Number.isInteger(parseInt(this.state.small))\n    ) {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for small'],\n      }));\n      readyToSubmit = false;\n    }\n    if (\n      this.state.medium === '' ||\n      !Number.isInteger(parseInt(this.state.medium))\n    ) {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for medium'],\n      }));\n      readyToSubmit = false;\n    }\n    if (\n      this.state.large === '' ||\n      !Number.isInteger(parseInt(this.state.large))\n    ) {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for large'],\n      }));\n      readyToSubmit = false;\n    }\n    if (this.state.colour === '') {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for colour'],\n      }));\n      readyToSubmit = false;\n    }\n    if (\n      this.state.price === 0 ||\n      !Number.isInteger(parseInt(this.state.price))\n    ) {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for price'],\n      }));\n      readyToSubmit = false;\n    }\n\n    if (this.state.imagesArrayForMulter.length === 0) {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide at least one image'],\n      }));\n      readyToSubmit = false;\n    }\n\n    if (this.state.brand === '') {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for brand'],\n      }));\n      readyToSubmit = false;\n    }\n\n    if (\n      this.state.stock === 0 ||\n      !Number.isInteger(parseInt(this.state.price))\n    ) {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for stock'],\n      }));\n      readyToSubmit = false;\n    }\n\n    if (this.state.category === '') {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for category'],\n      }));\n      readyToSubmit = false;\n    }\n\n    if (this.state.description === '') {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for description'],\n      }));\n      readyToSubmit = false;\n    }\n    if (this.state.chosenSubCat === '') {\n      this.setState((prevState) => ({\n        errors: [...prevState.errors, 'Please provide a value for subcategory'],\n      }));\n    }\n    if (readyToSubmit) {\n      // Here I am iterating over the images and adding them individually with the\n      // key 'images' which will be picked up by multer in the back end and\n      // added as an array\n      this.state.imagesArrayForMulter.forEach((image) => {\n        return formData.append('images', image);\n      });\n\n      // Note you have to append each key/value pair individually\n      formData.append('name', this.state.name);\n      formData.append('price', this.state.price);\n      formData.append('description', this.state.description);\n      formData.append('reviews', []);\n      formData.append('category', this.state.category);\n      formData.append('subcategory', this.state.chosenSubCat);\n      formData.append('colour', this.state.colour);\n      formData.append('small', this.state.small);\n      formData.append('large', this.state.large);\n      formData.append('medium', this.state.medium);\n      formData.append('brand', this.state.brand);\n\n      let data = {\n        formData: formData,\n        admin: { email: user.email, token: user.token },\n      };\n      createNewProduct(data);\n    }\n  };\n\n  reset = () => {\n    this.setState(this.initialState);\n    this.props.history.push('/admin/create');\n\n    this.props.closeModal();\n  };\n  viewProduct = () => {\n    this.props.history.push(`/product/${this.props.createdProductId}`);\n    this.props.closeModal();\n  };\n\n  removeImage = (index) => {\n    // Below the images are removed from the actual image files being sent to express and multer, the other is\n    // the image files being displayed as previews on the page ( using the filereader API)\n    let imagesToDisplay = [...this.state.imagesToDisplay];\n    let imagesToSendToMulter = [...this.state.imagesArrayForMulter];\n    imagesToDisplay.splice(index, 1);\n    imagesToSendToMulter.splice(index, 1);\n    this.setState({\n      imagesToDisplay: imagesToDisplay,\n      imagesArrayForMulter: imagesToSendToMulter,\n    });\n  };\n\n  updateCat = (e) => {\n    if (e.target.value !== 'blank') {\n      let subCats = Object.keys(this.props.categories[e.target.value]);\n      let allSubCats = [];\n      subCats.forEach((cat) => [\n        this.props.categories[e.target.value][cat].forEach((subsubcat) => {\n          return allSubCats.push(subsubcat);\n        }),\n      ]);\n      console.log(allSubCats);\n      this.setState({ category: e.target.value, subcategory: allSubCats });\n    }\n  };\n\n  updateSubCat = (e) => {\n    this.setState({ chosenSubCat: e.target.value });\n  };\n\n  handleChange = (e) => {\n    // This first if statement checks if I am dealing with an image upload, if so then it firstly adds the actual image file to\n    // to array in state which I can then send to the back end, this is added to the formData in the submit function, the second part uses the file reader\n    // to produce images which can be actually viewed as a preview on the page, both are stored in different arrays in state as they contain different files\n    if (e.target.files) {\n      this.setState({\n        imagesArrayForMulter: [\n          ...this.state.imagesArrayForMulter,\n          e.target.files[0],\n        ],\n      });\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        this.setState({\n          imagesToDisplay: this.state.imagesToDisplay.concat(fileReader.result),\n        });\n      };\n      fileReader.readAsDataURL(e.target.files[0]);\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  };\n\n  render() {\n    let { categories } = this.props;\n    let { productCreated } = this.props;\n    let options = Object.keys(categories).map((category) => (\n      <option name='category' value={category}>\n        {category}\n      </option>\n    ));\n    options.unshift(\n      <option selected value='blank'>\n        -- select an option --{' '}\n      </option>\n    );\n\n    console.log(options);\n\n    return (\n      <>\n        <div className={styles.editproductcontainer}>\n          {productCreated && (\n            <div className={styles.productmodal}>\n              <div className={styles.product}>\n                <h2\n                  style={{\n                    textAlign: 'center',\n                    color: 'rgba(44, 62, 80,1.0)',\n                  }}>\n                  {' '}\n                  <i className='fas fa-check'></i>\n                  &nbsp;Product created! Would you like to{' '}\n                </h2>\n                <button\n                  class={styles.productbtn}\n                  onClick={() => this.viewProduct()}\n                  className={styles.continueshoppingbtn}>\n                  View the product in our store\n                </button>\n                <button\n                  class={styles.productbtn}\n                  onClick={() => this.reset()}\n                  className={styles.continueshoppingbtn}>\n                  Create another product\n                </button>\n              </div>\n            </div>\n          )}\n          <h4>\n            <button class={styles.gobackbtn}>\n              <Link style={{ color: '#ecf0f1' }} to='/admin'>\n                Go back\n              </Link>{' '}\n            </button>\n          </h4>\n          <h2>CREATE PRODUCT</h2>\n          <div className={styles.editformcontainer}>\n            <form onSubmit={this.handleSubmit} encType='multipart/form-data'>\n              <label>\n                Name:\n                <input\n                  name='name'\n                  value={this.state.name}\n                  onChange={(e) => this.handleChange(e)}\n                />\n              </label>\n              <label>\n                Price\n                <input\n                  type='text'\n                  name='price'\n                  value={this.state.price}\n                  onChange={(e) => this.handleChange(e)}\n                />\n              </label>\n              Please upload the images below\n              <label for='uploadbtn' class={styles.uploadbtn}>\n                {' '}\n                Upload Images\n              </label>\n              <input\n                style={{ display: 'none' }}\n                onChange={(e) => this.handleChange(e)}\n                id='uploadbtn'\n                type='file'\n                accept='.jpg, .png,.jpeg'\n                multiple=''\n              />\n              <div class={styles.imagecontainer}>\n                {this.state.imagesToDisplay.map((image, index) => (\n                  <div\n                    onClick={() => this.removeImage(index)}\n                    className={styles.imagebtn}>\n                    <div class={styles.imagehover}>X</div>\n                    <img\n                      style={{\n                        height: '4rem',\n                        width: '6rem',\n                        padding: '0 0.5rem',\n                      }}\n                      src={image}\n                      alt=''></img>\n                  </div>\n                ))}\n              </div>\n              <label>\n                Brand\n                <input\n                  type='text'\n                  name='brand'\n                  value={this.state.brand}\n                  onChange={(e) => this.handleChange(e)}\n                />\n              </label>\n              <label>\n                Colour\n                <input\n                  type='text'\n                  name='colour'\n                  value={this.state.colour}\n                  onChange={(e) => this.handleChange(e)}\n                />\n              </label>\n              <label>\n                Stock :\n                {this.state.small !== '' &&\n                this.state.medium !== '' &&\n                this.state.large !== ''\n                  ? parseInt(this.state.small) +\n                    parseInt(this.state.medium) +\n                    parseInt(this.state.large)\n                  : null}\n                <br />\n                Please enter amounts in each size below\n                <div class={styles.sizecontainer}>\n                  <div class={styles.smallcontainer}>\n                    <span> Small </span>\n                    <input\n                      class={styles.sizeinput}\n                      type='text'\n                      name='small'\n                      value={this.state.small}\n                      onChange={(e) => this.handleChange(e)}\n                    />\n                    <span> Medium</span>\n                    <input\n                      class={styles.sizeinput}\n                      type='text'\n                      name='medium'\n                      value={this.state.medium}\n                      onChange={(e) => this.handleChange(e)}\n                    />\n                    <span> Large </span>\n                    <input\n                      class={styles.sizeinput}\n                      type='text'\n                      name='large'\n                      value={this.state.large}\n                      onChange={(e) => this.handleChange(e)}\n                    />\n                  </div>\n                </div>\n              </label>\n              <label>\n                Category\n                <br />\n                <select\n                  class={styles.dropdown}\n                  value={this.state.category}\n                  onChange={(e) => this.updateCat(e)}>\n                  {options}\n                </select>\n              </label>\n              <label>\n                Subcategory\n                <br />\n                <select\n                  class={styles.dropdown}\n                  disabled={this.state.subcategory.length === 0}\n                  value={this.state.chosenSubCat}\n                  onChange={(e) => this.updateSubCat(e)}>\n                  <option value='blank'>-- select an option -- </option>\n                  {this.state.subcategory.map((subcategory) => (\n                    <option name='subcategory' value={subcategory}>\n                      {subcategory}\n                    </option>\n                  ))}\n                </select>\n              </label>\n              <label>\n                Description\n                <input\n                  type='text'\n                  name='description'\n                  value={this.state.description}\n                  onChange={(e) => this.handleChange(e)}\n                />\n              </label>\n              <input class={styles.submitbtn} type='submit' value='Submit' />\n            </form>\n            {this.state.errors &&\n              this.state.errors.map((error) => (\n                <p className={styles.error}>{error}</p>\n              ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    categories: state.products.categories,\n    user: state.user.user,\n    productCreated: state.products.productCreatedModal,\n    createdProductId: state.products.latestCreatedProductId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createNewProduct: (data) => dispatch(createProduct(data)),\n    closeModal: () => dispatch(closeProductCreatedModal()),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(AdminCreateProduct)\n);\n"],"sourceRoot":""}